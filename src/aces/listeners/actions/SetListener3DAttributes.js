export const config = {
  highlight: false,
  isAsync: true,
  listName: "Set Listener 3D Attributes",
  displayText:
    "Set listener [i]{0}[/i] 3D attributes: position: ([i]{1}[/i], [i]{2}[/i], [i]{3}[/i]), velocity: ([i]{4}[/i], [i]{5}[/i], [i]{6}[/i]), forward: ([i]{7}[/i], [i]{8}[/i], [i]{9}[/i]), up: ([i]{10}[/i], [i]{11}[/i], [i]{12}[/i]), attenuation? ([i]{13}[/i]) : ([i]{14}[/i], [i]{15}[/i], [i]{16}[/i])",
  description: "Set the 3D attributes of the specified FMOD listener.",
  params: [
    {
      id: "id",
      name: "Id",
      desc: "The listener id from 0 to 7",
      type: "number",
      initialValue: "0",
    },
    {
      id: "x",
      name: "X",
      desc: "X position of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "y",
      name: "Y",
      desc: "Y position of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "z",
      name: "Z",
      desc: "Z position of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "velocity-x",
      name: "Velocity X",
      desc: "Velocity X of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "velocity-y",
      name: "Velocity Y",
      desc: "Velocity Y of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "velocity-z",
      name: "Velocity Z",
      desc: "Velocity Z of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "forward-x",
      name: "Forward X",
      desc: "Forward X of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "forward-y",
      name: "Forward Y",
      desc: "Forward Y of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "forward-z",
      name: "Forward Z",
      desc: "Forward Z of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "up-x",
      name: "Up X",
      desc: "Up X of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "up-y",
      name: "Up Y",
      desc: "Up Y of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "up-z",
      name: "Up Z",
      desc: "Up Z of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "hasSeparateAttenuationPosition",
      name: "Has separate attenuation position",
      desc: "Whether to use separate attenuation position",
      type: "boolean",
      initialValue: "false",
    },
    {
      id: "attenuation-x",
      name: "Attenuation X",
      desc: "Attenuation X of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "attenuation-y",
      name: "Attenuation Y",
      desc: "Attenuation Y of the listener",
      type: "number",
      initialValue: "0",
    },
    {
      id: "attenuation-z",
      name: "Attenuation Z",
      desc: "Attenuation Z of the listener",
      type: "number",
      initialValue: "0",
    },
  ],
};

export const expose = true;

export default async function (
  id,
  x,
  y,
  z,
  vx,
  vy,
  vz,
  fx,
  fy,
  fz,
  ux,
  uy,
  uz,
  hasSeparateAttenuationPosition,
  ax,
  ay,
  az
) {
  if (!this.curInst) return;
  await this.curInst.SendMessageAsync("set-listener-3d-attributes", [
    id,
    x,
    y,
    z,
    vx,
    vy,
    vz,
    fx,
    fy,
    fz,
    ux,
    uy,
    uz,
    hasSeparateAttenuationPosition,
    ax,
    ay,
    az,
  ]);
}
